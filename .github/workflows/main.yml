name: Build, Scan & Deploy Heybot

on: [push]

env:
  USER: "thaotll"

jobs:
  build_scan_deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code with write permission
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
        
      # Get current commit ID
      - name: Get current commit ID
        id: get_commit_id
        run: echo "CURRENT_COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Build and push the Docker image with current commit ID
      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg CURRENT_COMMIT_ID=${{ env.CURRENT_COMMIT_ID }} \
            -t ghcr.io/$USER/heybot-with-trivy-output:${{ env.CURRENT_COMMIT_ID }} \
            -t ghcr.io/$USER/heybot-with-trivy-output:latest .
          
          docker push ghcr.io/$USER/heybot-with-trivy-output:${{ env.CURRENT_COMMIT_ID }}
          docker push ghcr.io/$USER/heybot-with-trivy-output:latest

          # Run security analysis container
          docker run --rm \
            -v $(pwd)/analysis:/app/analysis \
            -e DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }} \
            -e MODEL_HUMOR_PATH=/app/model_humor.txt \
            -e MODEL_HUMOR_PATH1=/app/model_humor_sheldon.txt \
            -e DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }} \
            -e CURRENT_COMMIT_ID=${{ env.CURRENT_COMMIT_ID }} \
            ghcr.io/${{ env.USER }}/heybot-with-trivy-output:${{ env.CURRENT_COMMIT_ID }}