apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "heybot.fullname" . }}-analyzer
  labels:
    {{- include "heybot.labels" . | nindent 4 }}
    app.kubernetes.io/component: analyzer
  annotations:
    # Annotation, um ArgoCD zu signalisieren, den Job bei jeder Synchronisierung neu zu erstellen,
    # wenn sich die Konfiguration (z.B. Image-Tag) ge채ndert hat.
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    metadata:
      labels:
        {{- include "heybot.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: analyzer
    spec:
      restartPolicy: Never # Job soll nicht neu starten, wenn er fehlschl채gt, sondern als fehlgeschlagen gelten
      containers:
        - name: analyzer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/start.sh"] # Stellt sicher, dass main.py ausgef체hrt wird
          env:
            - name: CURRENT_COMMIT_ID
              value: {{ .Values.image.tag | quote }} # Der Image-Tag ist Commit-ID
            - name: MODEL_HUMOR_PATH
              value: /app/model_humor.txt 
            # Secrets sollten 체ber Kubernetes Secrets eingebunden werden
            - name: DISCORD_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.analyzer.secrets.discordWebhook.name | default (printf "%s-secrets" (include "heybot.fullname" .)) }}
                  key: {{ .Values.analyzer.secrets.discordWebhook.key | default "DISCORD_WEBHOOK_URL" }}
            - name: DEEPSEEK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.analyzer.secrets.deepseekApiKey.name | default (printf "%s-secrets" (include "heybot.fullname" .)) }}
                  key: {{ .Values.analyzer.secrets.deepseekApiKey.key | default "DEEPSEEK_API_KEY" }}
          volumeMounts:
            - name: analysis-volume
              mountPath: /app/analysis 
            - name: humor-files
              subPath: model_humor.txt 
      volumes:
        - name: analysis-volume
          persistentVolumeClaim:
            claimName: {{ .Values.analyzer.pvcName | default "analysis-pvc" }} 
        - name: humor-files
          secret:
            secretName: {{ .Values.analyzer.humorSecretName | default (printf "%s-humor-secret" (include "heybot.fullname" .)) }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "heybot.serviceAccountName" . }}
      {{- end }} 